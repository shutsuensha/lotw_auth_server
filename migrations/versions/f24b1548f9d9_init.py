"""init

Revision ID: f24b1548f9d9
Revises: 
Create Date: 2025-07-27 16:59:13.197024

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f24b1548f9d9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('locale', sa.String(), nullable=False),
    sa.Column('max_players', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_servers_id'), 'servers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('vk_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vk_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vk_id')
    )
    op.create_index(op.f('ix_vk_users_id'), 'vk_users', ['id'], unique=False)
    op.create_index(op.f('ix_vk_users_user_id'), 'vk_users', ['user_id'], unique=False)
    op.create_table('yandex_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('yandex_id', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('client_id', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('real_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('default_email', sa.String(), nullable=True),
    sa.Column('emails', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('birthday', sa.String(), nullable=True),
    sa.Column('default_avatar_id', sa.String(), nullable=True),
    sa.Column('is_avatar_empty', sa.Boolean(), nullable=True),
    sa.Column('default_phone', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('psuid', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('yandex_id')
    )
    op.create_index(op.f('ix_yandex_users_id'), 'yandex_users', ['id'], unique=False)
    op.create_index(op.f('ix_yandex_users_user_id'), 'yandex_users', ['user_id'], unique=False)
    op.create_table('sessions_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('vk_user_id', sa.Integer(), nullable=True),
    sa.Column('yandex_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['vk_user_id'], ['vk_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['yandex_user_id'], ['yandex_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_index(op.f('ix_sessions_users_id'), 'sessions_users', ['id'], unique=False)
    op.create_index(op.f('ix_sessions_users_vk_user_id'), 'sessions_users', ['vk_user_id'], unique=False)
    op.create_index(op.f('ix_sessions_users_yandex_user_id'), 'sessions_users', ['yandex_user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sessions_users_yandex_user_id'), table_name='sessions_users')
    op.drop_index(op.f('ix_sessions_users_vk_user_id'), table_name='sessions_users')
    op.drop_index(op.f('ix_sessions_users_id'), table_name='sessions_users')
    op.drop_table('sessions_users')
    op.drop_index(op.f('ix_yandex_users_user_id'), table_name='yandex_users')
    op.drop_index(op.f('ix_yandex_users_id'), table_name='yandex_users')
    op.drop_table('yandex_users')
    op.drop_index(op.f('ix_vk_users_user_id'), table_name='vk_users')
    op.drop_index(op.f('ix_vk_users_id'), table_name='vk_users')
    op.drop_table('vk_users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_servers_id'), table_name='servers')
    op.drop_table('servers')
    # ### end Alembic commands ###
